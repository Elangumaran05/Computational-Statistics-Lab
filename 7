import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.preprocessing import StandardScaler
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA

data = datasets.load_wine()
X = data.data
y = data.target

print(f"Number of classes: {len(np.unique(y))}")
print(f"Number of features: {X.shape[1]}")

scaler = StandardScaler()
X = scaler.fit_transform(X)

lda = LDA(n_components=2)  # Setting n_components to 2 for 2D scatter plot visualization
X_lda = lda.fit_transform(X, y)

print("Variance Ratio:", lda.explained_variance_ratio_)

plt.figure(figsize=(8, 6))
for label, marker, color in zip(range(3), ('^', 's', 'o'), ('red', 'green', 'blue')):
    plt.scatter(X_lda[y == label, 0],
                X_lda[y == label, 1],
                label=f'Class {label}',
                marker=marker,
                color=color,
                alpha=0.7)
plt.xlabel('LD1')
plt.ylabel('LD2')
plt.title('LDA Scatter Plot')
plt.legend(loc='upper right')
plt.grid()
plt.show()
